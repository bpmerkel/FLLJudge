<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension="json" #>
<#
// generate the comments JSON file from the comments.CSV file
var lines = File.ReadAllLines("Client\\wwwroot\\comments.csv")
    .Skip(1)
    .Select(line => line.Split(",".ToCharArray(), 3))
    .Select(a => new { area = a[0], section = a[1], comment = a[2].Trim('\"')})
    .ToList();

var areas = lines
    .GroupBy(line => line.area)
    .Select(g => new { area = g.Key, comments = g.ToList()})
    .ToList();

//We really liked __
//Your __ is really impressive!
//Consider __ (or have you considered?) using to __
//
//Be sure to call out their strengths, (areas where they Exceeded), and identify areas for improvement (areas where they were Beginning or Developing).
//Try as best as possible to balance positive with constructive feedback.
//Be specific rather than generalizing, and make sure the team understands your point.
//Always start and end on a positive note.
// areas = < #= string.Join(", ", areas.Select(a => a.area)) # >
#>
{
  "areas": [
<# for (var i = 0; i < areas.Count; i++)
    {
#>
    {
      "id": "<#= Guid.NewGuid().ToString() #>",
      "name": "<#=areas[i].area #>",
      "comments": [
<# for (var j = 0; j < areas[i].comments.Count; j++)
    {
#>
        {
          "id": "<#= Guid.NewGuid().ToString() #>",
          "text": "<#=areas[i].comments[j].comment #>",
          "section": "<#=areas[i].comments[j].section #>"
        }<#= (j == areas[i].comments.Count - 1 ? "" : ",") #>
<# } #>
      ]
    }<#= (i == areas.Count - 1 ? "" : ",") #>
<# } #>
  ]
}