@page "/"
@implements IBrowserViewportObserver
@implements IAsyncDisposable

<PageTitle>FLL Judge Comments</PageTitle>

<MudLayout>
    <MudMainContent Class="pt-0">
        @if (model != null)
        {
            <MudAppBar Color="Color.Primary" Fixed="false" Dense="true">
                @if (!IsSmallScreen)
                {
                    <MudText Typo="Typo.h4">FLL Judge Comments App</MudText>
                    <MudSpacer />
                }

                <MudTooltip Text="Show selections only">
                    <MudCheckBox @bind-Value="FilterOn"
                                 Disabled="@(!model.Areas.Any(a => a.Comments.Any(c => c.Selected)))"
                                 Color="Color.Warning" UncheckedColor="@Color.Success"
                                 Dense="true"
                                 CheckedIcon="@Icons.Material.Filled.FilterListOff"
                                 UncheckedIcon="@Icons.Material.Filled.FilterList">
                        <MudText Typo="Typo.body2" Inline="true">@(FilterOn ? "SHOW ALL" : "SHOW SELECTIONS")</MudText>
                    </MudCheckBox>
                </MudTooltip>

                <MudTooltip Text="Clear all selections">
                    <MudButton Variant="Variant.Text" StartIcon="@Icons.Material.Filled.ClearAll" OnClick="@DoReset" Color="Color.Warning">Clear All</MudButton>
                </MudTooltip>

                <MudCheckBox @bind-Value="fontSize"
                             Dense="true" Color="@Color.Secondary" TriState="true"
                             CheckedIcon="@Icons.Material.Filled.FormatSize"
                             IndeterminateIcon="@Icons.Material.Filled.FormatSize"
                             UncheckedIcon="@Icons.Material.Filled.FormatSize"
                             Size="@(fontSize == null ? Size.Large : fontSize == true ? Size.Small : Size.Medium)" />

                @if (!IsSmallScreen)
                {
                    <MudSpacer />
                    <MudButton Variant="Variant.Text" StartIcon="@Icons.Material.Filled.Help" Color="Color.Success" @onclick="OpenWelcomeDialog">Welcome</MudButton>
                }
            </MudAppBar>

            <MudTabs Elevation="4" Rounded="true" Centered="true" Color="@Color.Warning" ApplyEffectsToContainer="true" AlwaysShowScrollButtons="true" MinimumTabWidth="90">
                <ChildContent>
                    @foreach (var area in model.Areas)
                    {
                        <MudTabPanel Text="@GetAreaName(area.Name)" BadgeDot="@(!area.Comments.Any(c => c.Selected))" BadgeData="@area.Comments.Count(c => c.Selected)" BadgeColor="@(area.Comments.Any(c => c.Selected) ? Color.Error : Color.Transparent)">
                            @if (!FilterOn)
                            {
                                <MudText Typo="@(fontSize == null ? Typo.h5 : fontSize == true ? Typo.body1 : Typo.h6)" GutterBottom="false" Inline="true">
                                    Balance positive with constructive feedback.
                                    Be specific rather than generalizing, and make sure the team
                                    understands your point. Always start and end on a positive note.
                                    Call out their strengths (areas where they Accomplished or Exceeded) and
                                    identify areas for improvement (areas where they were Beginning or Developing).
                                </MudText>
                            }
                            <MudList T="Comment" Dense="true" @bind-SelectedValue="selectedItem" Color="Color.Primary">
                                @foreach (var comments in area.Comments.GroupBy(c => c.Section).Select(g =>  g.ToList()))
                                {
                                    <MudListItem Expanded="true">
                                        <ChildContent>
                                            <MudText Typo="@(fontSize == null ? Typo.h4 : fontSize == true ? Typo.h6 : Typo.h5)" Color="Color.Secondary">@GetSectionName(comments.First().Section)</MudText>
                                        </ChildContent>
                                        <NestedList>
                                            @foreach (var comment in comments)
                                            {
                                                if (!FilterOn || (FilterOn && comment.Selected))
                                                {
                                                    <MudListItem T="Comment">
                                                        <MudCheckBox @bind-Value="comment.Selected" Dense="true" Color="@Color.Primary">
                                                            <MudText Typo="@(fontSize == null ? Typo.h5 : fontSize == true ? Typo.body1 : Typo.h6)" GutterBottom="false" Inline="true" Class="@(comment.Selected ? "bold" : "normal")">
                                                                @comment.Text
                                                            </MudText>
                                                        </MudCheckBox>
                                                    </MudListItem>
                                                }
                                            }
                                        </NestedList>
                                    </MudListItem>
                                }
                            </MudList>
                        </MudTabPanel>
                    }
                </ChildContent>
            </MudTabs>
        }
    </MudMainContent>
</MudLayout>